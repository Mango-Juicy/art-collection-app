{"ast":null,"code":"var _jsxFileName = \"D:\\\\FUN\\\\Full-Stack\\\\luxury-app\\\\frontend\\\\src\\\\components\\\\SecTradingAccount.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { tradingWalletInfo } from '../actions/tradingBotActions';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SecTradingAccount() {\n  _s();\n  // Save api and secret key \n  const [apiKey, setApiKey] = useState('NwZlCXwJ0fPAgM19NWmDfN8B5YfmZxkV287AFk6WWnYYyiP6kODFnNwL5pCn1YFj');\n  const [secretKey, setSecretKey] = useState('E8KeI6V3uIE2taqhq0f0bVtPgubHTW6YvyiEewA1r2oBJBkYTkYW7Xb3dw1NDoiQ');\n  const [submitKey, setSubmitKey] = useState(false);\n\n  // Get wallet info\n  const walletInfo = useSelector(state => state.walletInfo);\n  const {\n    loadingWallet,\n    wallet\n  } = walletInfo;\n  const dispatch = useDispatch();\n  const handleSubmitKeys = () => {\n    setSubmitKey(true);\n    dispatch(tradingWalletInfo(apiKey, secretKey));\n  };\n\n  /*** SECTIONS ***/\n  // ApiSecretKey \n  const secApiSecretKey = () => {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white my-2 py-2\",\n        children: \"Binance keys setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"apiSecretKey\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-white my-2\",\n            children: \"Enter your Binance Api and Secret Keys to load wallet data: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-2\",\n            lg: 5,\n            md: 5,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"rounded\",\n              as: \"input\",\n              rows: 5,\n              placeholder: \"ApiKey\",\n              value: apiKey,\n              onChange: e => setApiKey(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-2\",\n            lg: 5,\n            md: 5,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"rounded\",\n              as: \"input\",\n              rows: 5,\n              placeholder: \"SecretKey\",\n              value: secretKey,\n              onChange: e => setSecretKey(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"p-2\",\n            lg: 2,\n            md: 2,\n            sm: 12,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-grid gap-2\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"float-end rounded\",\n                onClick: handleSubmitKeys,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n  //Wallet Info\n  const secWalletInfo = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white my-2 py-2\",\n        children: \"Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), loadingWallet ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this) : wallet[\"balances\"].map((balance, index) => /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 4,\n        sm: 6,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [balance.asset, \": \", balance.free]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: submitKey ? secWalletInfo() : secApiSecretKey()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 6\n  }, this);\n}\n_s(SecTradingAccount, \"JRe2BOQ1kpvWkujht6q4XX4xscE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = SecTradingAccount;\nexport default SecTradingAccount;\nvar _c;\n$RefreshReg$(_c, \"SecTradingAccount\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Row","Col","Button","Form","tradingWalletInfo","Loader","SecTradingAccount","apiKey","setApiKey","secretKey","setSecretKey","submitKey","setSubmitKey","walletInfo","state","loadingWallet","wallet","dispatch","handleSubmitKeys","secApiSecretKey","e","target","value","secWalletInfo","map","balance","index","asset","free"],"sources":["D:/FUN/Full-Stack/luxury-app/frontend/src/components/SecTradingAccount.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport {  tradingWalletInfo } from '../actions/tradingBotActions';\r\nimport Loader from './Loader'\r\n\r\nfunction SecTradingAccount() {\r\n\r\n  // Save api and secret key \r\n  const [apiKey, setApiKey] = useState('NwZlCXwJ0fPAgM19NWmDfN8B5YfmZxkV287AFk6WWnYYyiP6kODFnNwL5pCn1YFj');\r\n  const [secretKey, setSecretKey] = useState('E8KeI6V3uIE2taqhq0f0bVtPgubHTW6YvyiEewA1r2oBJBkYTkYW7Xb3dw1NDoiQ');\r\n  const [submitKey, setSubmitKey] = useState(false); \r\n\r\n  // Get wallet info\r\n  const walletInfo = useSelector(state => state.walletInfo);\r\n  const { loadingWallet, wallet } = walletInfo;\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const handleSubmitKeys = () => {\r\n    setSubmitKey(true)\r\n    dispatch(tradingWalletInfo(apiKey,secretKey))\r\n  }\r\n\r\n  /*** SECTIONS ***/ \r\n  // ApiSecretKey \r\n  const secApiSecretKey = () => {\r\n    return (\r\n      <Form>\r\n        <h4 className='text-white my-2 py-2'>Binance keys setting</h4>\r\n        <Form.Group controlId=\"apiSecretKey\">   \r\n          <Row>\r\n          <p className='text-white my-2'>Enter your Binance Api and Secret Keys to load wallet data: </p>            \r\n            <Col className='p-2' lg={5} md={5} sm={12} xs={12}>\r\n              <Form.Control                \r\n                className='rounded'\r\n                as=\"input\" \r\n                rows={5} \r\n                placeholder=\"ApiKey\" \r\n                value={apiKey} \r\n                onChange={e => setApiKey(e.target.value)}\r\n              />\r\n            </Col>\r\n\r\n            <Col className='p-2' lg={5} md={5} sm={12} xs={12}>\r\n              <Form.Control                \r\n                className='rounded'\r\n                as=\"input\" \r\n                rows={5} \r\n                placeholder=\"SecretKey\" \r\n                value={secretKey} \r\n                onChange={e => setSecretKey(e.target.value)}\r\n              />\r\n            </Col>\r\n            \r\n            <Col className='p-2' lg={2} md={2} sm={12} xs={12}>\r\n              <div className=\"d-grid gap-2\">\r\n                <Button \r\n                  variant=\"primary\" \r\n                  className=\"float-end rounded\"                                            \r\n                  onClick={handleSubmitKeys}\r\n                  >\r\n                  Submit\r\n                </Button>    \r\n              </div>\r\n            </Col>\r\n            \r\n          </Row>                              \r\n        </Form.Group>            \r\n      </Form>\r\n    );\r\n  }\r\n  //Wallet Info\r\n  const secWalletInfo = () => {\r\n    return (\r\n      <>\r\n        <h4 className='text-white my-2 py-2'>Account Info</h4>\r\n        {\r\n          loadingWallet ? <Loader /> :    \r\n          wallet[\"balances\"].map((balance,index) => (\r\n            <Col key={index} lg={4} md={4} sm={6} xs={6}>\r\n              <p>{balance.asset}: {balance.free}</p>\r\n            </Col>\r\n          ))\r\n        }\r\n      </>\r\n    );\r\n  }\r\n  \r\n  return (\r\n     <div>\r\n        <Row className='py-2'>\r\n          { submitKey ? secWalletInfo() : secApiSecretKey()}        \r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SecTradingAccount\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}