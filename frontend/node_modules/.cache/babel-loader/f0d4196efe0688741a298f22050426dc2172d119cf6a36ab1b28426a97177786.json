{"ast":null,"code":"var _jsxFileName = \"D:\\\\FUN\\\\Full-Stack\\\\luxury-app\\\\frontend\\\\src\\\\screens\\\\TradingBotScreen.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from 'react-redux';\nimport { Row, Button } from 'react-bootstrap';\nimport SecTradingAccount from '../components/SecTradingAccount';\nimport SecTradingSession from '../components/SecTradingSession';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TradingBotScreen() {\n  _s();\n  const storeState = useSelector(state => state);\n  const printStoreState = () => {\n    console.log(\"store state:\");\n    console.log(storeState);\n  };\n\n  // Hide tradingParams before wallet data\n  const isWalletEmpty = () => {\n    const wallet = storeState.walletInfo.wallet;\n    return Object.keys(wallet).length === 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: /*#__PURE__*/_jsxDEV(SecTradingAccount, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-2\",\n      children: isWalletEmpty() ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(SecTradingSession, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"float-end rounded\",\n        onClick: printStoreState,\n        children: \"print state\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 6\n  }, this);\n}\n_s(TradingBotScreen, \"wTk9YUu+WCDKGbhexElvfTGhSt0=\", false, function () {\n  return [useSelector];\n});\n_c = TradingBotScreen;\nexport default TradingBotScreen;\nvar _c;\n$RefreshReg$(_c, \"TradingBotScreen\");","map":{"version":3,"names":["useSelector","Row","Button","SecTradingAccount","SecTradingSession","TradingBotScreen","storeState","state","printStoreState","console","log","isWalletEmpty","wallet","walletInfo","Object","keys","length"],"sources":["D:/FUN/Full-Stack/luxury-app/frontend/src/screens/TradingBotScreen.js"],"sourcesContent":["import { useSelector } from 'react-redux'\r\nimport { Row, Button } from 'react-bootstrap'\r\nimport SecTradingAccount from '../components/SecTradingAccount'\r\nimport SecTradingSession from '../components/SecTradingSession';\r\n\r\n\r\nfunction TradingBotScreen() {  \r\n\r\n  const storeState = useSelector(state => state);\r\n  \r\n\r\n  const printStoreState = () => {\r\n    console.log(\"store state:\")\r\n    console.log(storeState)    \r\n  }  \r\n  \r\n  // Hide tradingParams before wallet data\r\n  const isWalletEmpty = () => {\r\n    const wallet = storeState.walletInfo.wallet\r\n    return Object.keys(wallet).length === 0\r\n  } \r\n\r\n  return (\r\n     <div>\r\n        <Row className='py-2'>\r\n          <SecTradingAccount></SecTradingAccount>   \r\n        </Row>\r\n\r\n        <Row className='py-2'>\r\n          {isWalletEmpty() ? <div></div> : <SecTradingSession></SecTradingSession>}               \r\n        </Row>\r\n\r\n        <Row className='py-5'>\r\n          <Button \r\n            variant=\"primary\" \r\n            className=\"float-end rounded\"                                            \r\n            onClick={printStoreState}\r\n          >\r\n            print state\r\n          </Button>                         \r\n        </Row>       \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TradingBotScreen\r\n\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,GAAG,EAAEC,MAAM,QAAQ,iBAAiB;AAC7C,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,iBAAiB,MAAM,iCAAiC;AAAC;AAGhE,SAASC,gBAAgB,GAAG;EAAA;EAE1B,MAAMC,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAAC;EAG9C,MAAMC,eAAe,GAAG,MAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3BD,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EACzB,CAAC;;EAED;EACA,MAAMK,aAAa,GAAG,MAAM;IAC1B,MAAMC,MAAM,GAAGN,UAAU,CAACO,UAAU,CAACD,MAAM;IAC3C,OAAOE,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,MAAM,KAAK,CAAC;EACzC,CAAC;EAED,oBACG;IAAA,wBACG,QAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAA,uBACnB,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACnC,eAEN,QAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAA,UAClBL,aAAa,EAAE,gBAAG;QAAA;QAAA;QAAA;MAAA,QAAW,gBAAG,QAAC,iBAAiB;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QACpE,eAEN,QAAC,GAAG;MAAC,SAAS,EAAC,MAAM;MAAA,uBACnB,QAAC,MAAM;QACL,OAAO,EAAC,SAAS;QACjB,SAAS,EAAC,mBAAmB;QAC7B,OAAO,EAAEH,eAAgB;QAAA,UAC1B;MAED;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GArCQH,gBAAgB;EAAA,QAEJL,WAAW;AAAA;AAAA,KAFvBK,gBAAgB;AAuCzB,eAAeA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}